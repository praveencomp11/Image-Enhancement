
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Divide By Zero
 */
public class Frame1 extends javax.swing.JFrame {

    /**
     * Creates new form Frame1
     */
    File f=null;
     boolean flagLoaded;
    boolean flagGrayscale;
    boolean setControls;
    boolean flagAccumulate;
      int ww, hh;
    BufferedImage tIIn, tIOut;
    Graphics2D    gIIn, gIOut;
    ImageIcon     iiIn, iiOut;
    int inPixels[][], outPixels[][], tempPixels[][];
    
    int minTh, maxTh, thType;
    public Frame1() {
        initComponents();
         Dimension sd  = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(sd.width / 2 - this.getWidth()/ 2, sd.height / 2 - this.getHeight()/ 2);
       // this.setSize((int)sd.getWidth()-20,(int)sd.getHeight()-40);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Input = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabelOut = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabelIn = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Enhancement");
        setPreferredSize(new java.awt.Dimension(1139, 662));

        jButton1.setText("Load Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Split Red");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelOut.setText("jLabel1");
        jScrollPane2.setViewportView(jLabelOut);

        Input.addTab("Ouput", jScrollPane2);

        jLabelIn.setText("jLabel1");
        jScrollPane1.setViewportView(jLabelIn);

        Input.addTab("Input", jScrollPane1);

        jButton3.setText("Split Green");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Split Blue");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton3)
                        .addGap(39, 39, 39)
                        .addComponent(jButton4)))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //JFileChooser fc=new JFileChooser();
        //fc.showOpenDialog(fc);
        //File f=fc.getSelectedFile();
        String fname;
        FileDialog fd = new FileDialog(this,"Select Main Image To Open",FileDialog.LOAD);
        fd.setVisible(true);
        if(fd.getFile()==null)
            return;
        fname = fd.getDirectory() + fd.getFile();
        loadFile(fname);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.out.println("Flag Loaded="+flagLoaded);
          if(!flagLoaded) {
            new MessageBox(this,"NO IMAGE LOADED!").setVisible(true);
            return;
        }

        int col, r, g, b, gs;
        for(int y=0;y<hh;y++) {
            for(int x=0;x<ww;x++) {
                col = inPixels[y][x];
                r = (col >> 16) & 0xff;
                g = (col >> 8) & 0xff;
                b = (col >> 0) & 0xff;

                g = b = 0;

                outPixels[y][x] = (r<<16) | (g<<8) | (b);
                tIOut.setRGB(x,y,outPixels[y][x]);
            }
        }
        jLabelOut.repaint();

        if(flagAccumulate) {
            accumulate();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
          if(!flagLoaded) {
            new MessageBox(this,"NO IMAGE LOADED!").setVisible(true);
            return;
        }

        int col, r, g, b, gs;
        for(int y=0;y<hh;y++) {
            for(int x=0;x<ww;x++) {
                col = inPixels[y][x];
                r = (col >> 16) & 0xff;
                g = (col >> 8) & 0xff;
                b = (col >> 0) & 0xff;

                r = b = 0;

                outPixels[y][x] = (r<<16) | (g<<8) | (b);
                tIOut.setRGB(x,y,outPixels[y][x]);
            }
        }
        jLabelOut.repaint();

        if(flagAccumulate) {
            accumulate();
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
          if(!flagLoaded) {
            new MessageBox(this,"NO IMAGE LOADED!").setVisible(true);
            return;
        }

        int col, r, g, b, gs;
        for(int y=0;y<hh;y++) {
            for(int x=0;x<ww;x++) {
                col = inPixels[y][x];
                r = (col >> 16) & 0xff;
                g = (col >> 8) & 0xff;
                b = (col >> 0) & 0xff;

                r = g = 0;

                outPixels[y][x] = (r<<16) | (g<<8) | (b);
                tIOut.setRGB(x,y,outPixels[y][x]);
            }
        }
        jLabelOut.repaint();

        if(flagAccumulate) {
            accumulate();
        }
    }//GEN-LAST:event_jButton4ActionPerformed
public void loadFile(String fname) {
        try
        {
            Image image = Toolkit.getDefaultToolkit().getImage(fname);
            MediaTracker mediaTracker = new MediaTracker(new Container());
            mediaTracker.addImage(image, 0);
            mediaTracker.waitForID(0);
            System.out.println("Input Image Read!");
            ww = image.getWidth(null);
            hh = image.getHeight(null);
            
            tIIn = new BufferedImage(ww, hh, BufferedImage.TYPE_INT_RGB);
            gIIn = tIIn.createGraphics();
            gIIn.drawImage(image, 0, 0, ww, hh, null);
            iiIn = new ImageIcon(tIIn);
            jLabelIn.setIcon(iiIn);
            
            tIOut = new BufferedImage(ww, hh, BufferedImage.TYPE_INT_RGB);
            gIOut= tIIn.createGraphics();
            gIOut.drawImage(image, 0, 0, ww, hh, null);
            iiOut = new ImageIcon(tIOut);
            jLabelOut.setIcon(iiOut);
            
            inPixels = new int[5000][5000];
            outPixels = new int[5000][5000];
            for(int yy=0;yy<hh;yy++) {
                for(int xx=0;xx<ww;xx++) {
                    inPixels[yy][xx] = tIIn.getRGB(xx,yy) & 0xffffff;
                    outPixels[yy][xx] = inPixels[yy][xx];
                    tIOut.setRGB(xx,yy,inPixels[yy][xx]);
                }
            }
            
            // reset all flags....
            flagLoaded = true;
            flagGrayscale = false;
            
       }catch(Exception e) {
            flagLoaded = false;
            System.out.println("Exception : " + e);
       }
        
    }

 public void accumulate() {
        for(int y=0;y<hh;y++) {
            for(int x=0;x<ww;x++) {
                inPixels[y][x] = outPixels[y][x];
                tIIn.setRGB(x,y,outPixels[y][x]);
            }
        }
        jLabelIn.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabelIn;
    private javax.swing.JLabel jLabelOut;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
